from tkinter import *
import random
import time

root=Tk()
root.title("Game")
root.resizable(False, False)
root.wm_attributes("-topmost", 1)
canvas=Canvas(root, width=500, height=400,bd=0,highlightthickness=0)
canvas.pack()
root.update()
max_score=5

class Score:
    def __init__(self, canvas):
        self.score=0
        self.canvas=canvas
        self.id=canvas.create_text(450,10,text=self.score, fill="black")
        self.score_2=0
        self.id_2=canvas.create_text(430,10,text=self.score_2, fill="black")
    def hit(self):
        self.score+=1
        self.canvas.itemconfig(self.id, text=self.score)
    def hit_2(self):
        self.score_2+=1
        self.canvas.itemconfigure(self.id_2, text=self.score_2)
    def get_score(self):
        return self.score
    def get_score_2(self):
        return self.score_2

class Paddle:
    def __init__(self,canvas, color):
        self.canvas=canvas
        self.id=canvas.create_rectangle(0,0,100,10,fill=color)
        self.canvas.move(self.id,200, 350)
        self.x=0
        self.canvas_width=self.canvas.winfo_width()
        self.started=False
        self.canvas.bind_all("<KeyPress-Left>",self.turn_left)
        self.canvas.bind_all("<KeyPress-Right>",self.turn_right)
        self.canvas.bind_all("<Button-1>",self.start_game)
    def turn_left(self,event):
        self.x=-3
    def turn_right(self,event):
        self.x=3
    def draw(self):
        self.canvas.move(self.id, self.x,0)
        pos=self.canvas.coords(self.id)
        if pos[0]<=0:
            self.x=0
        elif pos[2]>=self.canvas_width:
            self.x=0 
    def start_game(self, event):
        self.started=True

class Paddle_2:
    def __init__(self, canvas, color):
        self.canvas=canvas
        self.id=canvas.create_rectangle(0,0,100,10,fill=color)
        self.canvas.move(self.id,200, 50)
        self.x=0
        self.canvas_width=self.canvas.winfo_width()
        self.canvas.bind_all("<a>",self.turn_left)
        self.canvas.bind_all("<d>",self.turn_right)
    def turn_left(self,event):
        self.x=-3
    def turn_right(self,event):
        self.x=3

    def draw(self):
        self.canvas.move(self.id, self.x,0)
        pos=self.canvas.coords(self.id)
        if pos[0]<=0:
            self.x=0
        elif pos[2]>=self.canvas_width:
            self.x=0
    def start_game(self, event):
        self.started=True



class Ball:
    def __init__(self,canvas,paddle,paddle_2,color):
        self.canvas=canvas
        self.paddle=paddle
        self.paddle_2=paddle_2
        self.color=color
        self.id=None
        self.new(self)
        if self.id:
            self.canvas.delete(self.id)


        
        self.id=canvas.create_oval(10,10,25,25,fill=self.color)
        self.canvas.move(self.id, 250,200)
        start=[-3,-2,-1,1,1,2,3]
        random.shuffle(start)
        self.x=start[0]
        self.y=-3
        self.canvas_height=self.canvas.winfo_height()
        self.canvas_width=self.canvas.winfo_width()
        self.hit_bottom=False
        self.hit_top=False
#    def new
    def draw(self):
        self.canvas.move(self.id,self.x,self.y)
        pos=self.canvas.coords(self.id)
        if pos[1]<=0:
            self.hit_top=True
        if pos[3]>=self.canvas_height:
            self.hit_bottom=True
        if self.hit_paddle(pos)==True:
            self.y-=3
        if self.hit_paddle_2(pos)==True:
            self.y+=3
        if pos[0]<=0:
            self.x=3
        if pos[2]>=self.canvas_width:
            self.x=-3

    def hit_paddle(self,pos):
        paddle_pos=self.canvas.coords(self.paddle.id)
        paddle2_pos=self.canvas.coords(self.paddle_2.id)
        if pos[2]>=paddle2_pos[0] and pos[0]<=paddle2_pos[2]:
            if pos[1]<=paddle2_pos[3] and pos[1]>=paddle2_pos[1]:
                self.x+=self.paddle_2.x
                return True
        if pos[2]>=paddle_pos[0] and pos[0]<=paddle_pos[2]:
            if pos[3]>=paddle_pos[1] and pos[3]<=paddle_pos[3]:
                self.x+=self.paddle.x
                return True
            
        return False
paddle_2=Paddle_2(canvas, "purple")
score=Score(canvas)
paddle=Paddle(canvas, "blue")
text_sch=canvas.create_text(440,10,text=":")
ball=Ball(canvas,paddle,paddle_2,"yellow")
game_end=False
#text=canvas.create_text(250,200,text="Game Over", font="Arial 20", state=HIDDEN)
while True:
    if ball.hit_bottom==False and paddle.started==True and ball.hit_top==False: 
        paddle_2.draw()
        ball.draw()
        paddle.draw()
    if ball.hit_bottom==True:
        score.hit_2()
        ball.new()
        time.sleep(1)

    if ball.hit_top==True:
        score.hit()
        ball.new()
        time.sleep(1)
 
        break
    root.update_idletasks()
    root.update()
    time.sleep(0.01)
    
