Общий вид решения задач на обработку набора чисел в Python

1. Суммирование чисел набора

n = ...
s = 0 	#Начальное значение переменной-сумматора
for nom in range(n): 	#Повторение n раз
				#Или for nom in range(1, n + 1):
	а = int(input('Введите очередное число '))
	s = s + a
#Вывод результата или использование его в расчетах
…

2. Суммирование чисел набора, которые обладают некоторыми свойствами (удовлетворяют некоторому условию)

n = ...
s = 0
for nom in range(n): #Или for nom in range(1, n + 1):
				#Ввод очередного числа а
	a = float(input('Введите очередное число '))
	if <условие>: #Только в этом случае происходит учет значения а в 					сумме
		s = s + a

#Вывод результата или использование его в расчетах
…

где <условие> – логическое выражение, определяющее свойства чисел для суммирования. Оно может зависеть от значения числа а или/и от его порядкового номера nom.

3. Подсчет количества чисел набора, которые обладают некоторыми свойствами

kol = 0 #Искомое количество
for nom in range(n):
	#Ввод очередного числа а
	...
	if <условие>:
		kol = kol + 1

4. Определение среднего арифметического тех чисел набора, которые обладают некоторыми свойствами

n = ...
s = 0
kol = 0
for nom in range(n):
	#Ввод очередного числа а
	a = float(input('Введите очередное число '))
	if <условие>: #Если число удовлетворяет заданному условию
		s = s + a #Учитываем его значение в сумме
		kol = kol + 1 #и увеличиваем на 1 значение счетчика
#Определяем результат
#Подсчет и вывод результата
if kol > 0:
	sred = sum/kol
	print('Среднее значение: ', '% 5.1f '% sred)
else:
	print(' Чисел, удовлетворяющих условию, нет')

5.Определение максимального значения в наборе чисел

n = ...
#Ввод первого числа а
a = float(input('Введите первое число '))
Max = а
#Ввод остальных чисел а набора
for nom in range(2, n + 1):
	a = float(input('Введите очередное число '))
	if a > Max:
		Max = а
#Вывод результата (Max) или использование его в расчетах
...

Аналогичным образом (с небольшими изменениями) можно определить минимальное значение в наборе чисел.

6. Определение порядкового номера максимального значения в наборе чисел

#Ввод первого числа а
a = float(input('Введите первое число '))
Max = а
nomer_max = 1
for nom in range(2, n + 1):
	a = float(input('Введите очередное число '))
	if a > Max:
		Max = а
		nomer_max = nom
#Вывод результата или использование его в расчетах
...


7. Определение максимального значения тех чисел набора, которые удовлетворяют некоторому условию

n = ...
Max = Х #Начальное значение величины max
for nom in range(n):
#Ввод очередного числа а
...
#Проверяем его
	if <условие>: #Встретилось число, удовлетворяющее заданному 					условию
    				#Cравниваем его с величиной Max
		if а > Max:
				#Встретилось новое максимальное число
				#среди чисел, удовлетворяющих заданному условию
			Max = а #Принимаем его в качестве нового
					#значения Max
#Вывод результата (Max) или использование его в расчетах
…

где Х – число, о котором заведомо известно, что оно меньше минимального из чисел, для которых определяется максимальное значение. Например, если все числа набора двузначные, то Х можно принять равным 9.

Если же допускается, что чисел, удовлетворяющих заданному условию, в обрабатываемом наборе может не быть, то вывод ответа при этом должен быть оформлен так:

if Max == X:
	print('Чисел, удовлетворяющих условию, в наборе нет')
else:
	print('Искомое максимальное значение:', Max)

8. Нахождение второго по величине максимального числа набора

8.1. Поиск числа, которое стояло бы на предпоследнем месте, если бы числа набора были отсортированы по неубыванию

#Ввод первого числа а1
a1 = float(input('Введите первое число '))
#Ввод второго числа а2
a2 = float(input('Введите второе число '))
#Определение начальных значений величин max1 и max2
if a1 > a2:
	max1 = а1
	max2 = а2
else:
	max1 = а2
	max2 = а1

или короче:
#Ввод первых двух чисел а1 и а2
...
#Определение начальных значений величин max1 и max2
max1 = а1
max2 = а2
if a2 > a1:
	max1 = а2
	max2 = а1

Затем рассматриваем остальные числа, сравнивая их сначала со значением max1, а затем (при необходимости) – и со значением max2:
for nom in range(3, n + 1):
	a = float(input('Введите очередное число '))
	if a > max1:
		#Встретилось число, большее max1
		#Бывший первый максимум станет вторым
		max2 = max1
		#Первым максимумом станет встреченный элемент
		max1 = а
	#Внимание - именно в таком порядке! (Можно применить 	#множественное присваивание: max2, max1 = max1, а или max1, max2 	#= а, max1)
	else:
		#Очередное число не больше max1
		#Сравниваем его со значением max2
		if a > max2:
		#Встретилось число, большее max2
		#Принимаем его в качестве нового значения max2
			max2 = а
#Значение max1 не меняется
#Вывод ответа или использование его в расчетах
...

8.2. Нахождение числа набора, больше которого только максимальное
max1 = -1001
for nom in range(n):
a = float(input('Введите очередное число '))
	if a > max1:
	#Встретилось число, большее max1
	#Бывший первый максимум станет вторым
		max2 = max1
		#Первым максимумом станет встреченное число
		max1 = а
	else: #Очередное число не больше max1
		#В этом случае сравниваем его со значением max2
		if a < max1 and a > max2: #Только в этом случае!
		#Встретилось число, меньшее max1 и большее max2
		#Принимаем его в качестве нового значения max2
			max2 = а
			#Значение max1 не меняется

Фрагмент программы, относящийся к выводу ответа, оформляется так:

if max2 == -1001:
#Второй максимум не встретился
	print('В наборе нет такого значения')
else:
	print('Второй максимум равен', max2)

9. Нахождение количества максимальных элементов набора

n = ...
#Ввод первого числа а1
a = float(input('Введите первое число '))
#Начальное присваивание значений искомым величинам
Max = а #Максимальное число
kol_max = 1 #Пока оно единственное
#Рассматриваем остальные числа
for nom in range (2, n + 1):
	a = float(input('Введите очередное число '))
	if a > Max:
	#Встретился новый максимум
	#Принимаем его в качестве значения Max
		Max = а
		#Пока он – единственный
		kol_max = 1
	else:
		#Проверяем, не равно ли очередное значение 'старому' 					максимуму
		if a == Max:
		#Встретился еще один максимум
		#Учитываем это
			kol_max = kol_max + 1
			#Выводим ответ
print(kol_max)

Если интервал возможных значений набора известен, то и здесь можно отдельно не рассматривать первое число:

#Начальное присваивание значений искомым величинам
Max = Min – 1
kol_max = 0
#Рассматриваем все числа
for nom in range (n):
	a = float(input('Введите очередное число '))
	if a > Max:
	... (см.выше)
где Min – нижняя граница интервала возможных значений.

Примечание. Задача нахождения количества минимальных элементов решается аналогично.

10. Нахождение третьего максимума

max1 = …
max2 = …
#Начальное значение max3 можно не задавать
for nom in range (n):
a = float(input('Введите очередное число '))
	if a > max1:
	#Встретилось число, большее max1
	#Бывший второй максимум станет третьим
		max3 = max2
		#Бывший первый максимум станет вторым
		max2 = max1
		#Первым максимумом станет встреченное число
		max1 = а
		#Внимание - именно в таком порядке!(Здесь и далее также можно применить множественное присваивание).
	else: #Очередное число не больше max1
		#Сравниваем его со значением max2
		if a > max2:
		#Встретился элемент, больший max2
		#Бывший второй максимум станет третьим,
			max3 = max2
		#а встреченный элемент принимаем в качестве
		#нового значения max2
			max2 = а
		#Значение max1 не меняется
		else: #Очередное число не больше max2
		#Сравниваем его со значением max3
			if a > max3:
			#Меняем только значение max3
				max3 = а
Примечание. Задача нахождения третьего минимума решается аналогично.

